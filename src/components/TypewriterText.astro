---
interface Props {
  text: string;
  speed?: number;
  startDelay?: number;
  cursorBlinkDelay?: number;
  className?: string;
}

const { 
  text, 
  speed = 120,
  startDelay = 300,
  cursorBlinkDelay = 500,
  className = "text-5xl md:text-6xl font-bold mb-8 text-white"
} = Astro.props;
---

<div class="typewriter-container">
  <h1 class={className}>
    <span id="typewriter-text"></span>
    <span id="typewriter-cursor" class="cursor">|</span>
  </h1>
</div>

<style>
  .cursor {
    font-weight: 100;
    color: white;
    animation: blink-animation 1s step-end infinite;
  }

  .cursor-stop {
    display: none;
  }

  @keyframes blink-animation {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
</style>

<script define:vars={{ text, speed, startDelay, cursorBlinkDelay }}>
  function typeText() {
    const textElement = document.getElementById('typewriter-text');
    const cursorElement = document.getElementById('typewriter-cursor');
    const targetText = text;
    let index = 0;

    setTimeout(() => {
      function addCharacter() {
        if (index < targetText.length) {
          textElement.textContent += targetText.charAt(index);
          index++;
          setTimeout(addCharacter, speed);
        } else {
          setTimeout(() => {
            cursorElement.classList.add('cursor-stop');
          }, cursorBlinkDelay);
        }
      }
      
      addCharacter();
    }, startDelay);
  }

  document.addEventListener('DOMContentLoaded', typeText);
</script> 